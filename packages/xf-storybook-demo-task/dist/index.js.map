{"version":3,"file":"index.js","sources":["../src/task/Task.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Task.css\";\n\nconst XFStoryBookDemoTask = ({task: {id, title, state}, onArchiveTask, onPinTask}) => {\n    return (\n        <div className={`list-item ${state}`}>\n            <label className=\"checkbox\">\n                <input\n                    type=\"checkbox\"\n                    defaultChecked={state === 'TASK_ARCHIVED'}\n                    disabled={true}\n                    name=\"checked\"\n                />\n                <span className=\"checkbox-custom\" onClick={() => onArchiveTask(id)}/>\n            </label>\n            <div className=\"title\">\n                <input\n                    type=\"text\"\n                    value={title}\n                    readOnly={true}\n                    placeholder=\"Input title\"\n                />\n            </div>\n            <div\n                className=\"actions\"\n                onClick={event => event.stopPropagation()}\n            >\n                {\n                    state !== 'TASK_ARCHIVED' &&\n                    <a\n                        href={'/#'}\n                        onClick={() => onPinTask(id)}\n                    >\n                        <span className={`icon-star`} />\n                    </a>\n                }\n            </div>\n        </div>\n    );\n};\nexport default XFStoryBookDemoTask;\n\nXFStoryBookDemoTask.propTypes = {\n    /** Composition of the task */\n    task: PropTypes.shape({\n        /** Id of the task */\n        id: PropTypes.string.isRequired,\n        /** Title of the task */\n        title: PropTypes.string.isRequired,\n        /** Current state of the task */\n        state: PropTypes.string.isRequired,\n    }),\n    /** Event to change the task to archived */\n    onArchiveTask: PropTypes.func,\n    /** Event to change the task to pinned */\n    onPinTask: PropTypes.func,\n};\n"],"names":["XFStoryBookDemoTask","task","id","title","state","onArchiveTask","onPinTask","React","event","stopPropagation","propTypes","PropTypes","shape","string","isRequired","func"],"mappings":";;;;;;;;;;;;IAIMA,mBAAmB,GAAG,SAAtBA,mBAAsB,OAA0D;AAAA,uBAAxDC,IAAwD;AAAA,MAAjDC,EAAiD,aAAjDA,EAAiD;AAAA,MAA7CC,KAA6C,aAA7CA,KAA6C;AAAA,MAAtCC,KAAsC,aAAtCA,KAAsC;AAAA,MAA9BC,aAA8B,QAA9BA,aAA8B;AAAA,MAAfC,SAAe,QAAfA,SAAe;AAClF,sBACIC;AAAK,IAAA,SAAS,sBAAeH,KAAf;AAAd,kBACIG;AAAO,IAAA,SAAS,EAAC;AAAjB,kBACIA;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,cAAc,EAAEH,KAAK,KAAK,eAF9B;AAGI,IAAA,QAAQ,EAAE,IAHd;AAII,IAAA,IAAI,EAAC;AAJT,IADJ,eAOIG;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAkC,IAAA,OAAO,EAAE;AAAA,aAAMF,aAAa,CAACH,EAAD,CAAnB;AAAA;AAA3C,IAPJ,CADJ,eAUIK;AAAK,IAAA,SAAS,EAAC;AAAf,kBACIA;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAEJ,KAFX;AAGI,IAAA,QAAQ,EAAE,IAHd;AAII,IAAA,WAAW,EAAC;AAJhB,IADJ,CAVJ,eAkBII;AACI,IAAA,SAAS,EAAC,SADd;AAEI,IAAA,OAAO,EAAE,iBAAAC,KAAK;AAAA,aAAIA,KAAK,CAACC,eAAN,EAAJ;AAAA;AAFlB,KAKQL,KAAK,KAAK,eAAV,iBACAG;AACI,IAAA,IAAI,EAAE,IADV;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMD,SAAS,CAACJ,EAAD,CAAf;AAAA;AAFb,kBAIIK;AAAM,IAAA,SAAS;AAAf,IAJJ,CANR,CAlBJ,CADJ;AAmCH;AAGDP,mBAAmB,CAACU,SAApB,GAAgC;AAC5B;AACAT,EAAAA,IAAI,EAAEU,6BAAS,CAACC,KAAV,CAAgB;AAClB;AACAV,IAAAA,EAAE,EAAES,6BAAS,CAACE,MAAV,CAAiBC,UAFH;;AAGlB;AACAX,IAAAA,KAAK,EAAEQ,6BAAS,CAACE,MAAV,CAAiBC,UAJN;;AAKlB;AACAV,IAAAA,KAAK,EAAEO,6BAAS,CAACE,MAAV,CAAiBC;AANN,GAAhB,CAFsB;;AAU5B;AACAT,EAAAA,aAAa,EAAEM,6BAAS,CAACI,IAXG;;AAY5B;AACAT,EAAAA,SAAS,EAAEK,6BAAS,CAACI;AAbO,CAAhC;;;;"}